name: release-docker

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version/tag"
        required: true

jobs:
  build:
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64, linux/arm/v7, linux/arm/v8]
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
          tool-cache: false

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: siyuan-note

      - name: Clone Siyuan Source and Apply Patches
        run: |
          mkdir -p ${{ github.workspace }}/go
          cd ${{ github.workspace }}/siyuan-note/

          git clone --branch ${{ github.event.inputs.version }} --depth=1 https://github.com/siyuan-note/siyuan.git
          cd siyuan

          git apply ${{ github.workspace }}/siyuan-note/patches/siyuan/disable-update.patch
          git apply ${{ github.workspace }}/siyuan-note/patches/siyuan/default-config.patch
          git apply ${{ github.workspace }}/siyuan-note/patches/siyuan/mock-vip-user.patch

          git status

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PWD }}

      - name: Build and Push Docker Image
        working-directory: ${{ github.workspace }}/siyuan-note/siyuan
        run: |
          docker buildx build \
            --push \
            --platform ${{ matrix.platform }} \
            --tag ${{ env.DOCKER_HUB_USER }}/siyuan:latest \
            --tag ${{ env.DOCKER_HUB_USER }}/siyuan:${{ github.event.inputs.version }} \
            --cache-from=type=registry,ref=${{ env.DOCKER_HUB_USER }}/siyuan:buildcache \
            --cache-to=type=inline .
        env:
          DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
